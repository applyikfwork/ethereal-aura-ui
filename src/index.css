@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Base Colors - Soft whites and silvers */
    --background: 0 0% 99%;
    --foreground: 240 8% 20%;

    /* Card with glassmorphism */
    --card: 0 0% 100%;
    --card-foreground: 240 8% 20%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 8% 20%;

    /* Primary - Soft lavender accent */
    --primary: 260 60% 65%;
    --primary-foreground: 0 0% 100%;

    /* Secondary - Sky blue */
    --secondary: 200 85% 92%;
    --secondary-foreground: 240 8% 20%;

    /* Muted - Soft silver */
    --muted: 240 5% 96%;
    --muted-foreground: 240 5% 50%;

    /* Accent - Light pink */
    --accent: 340 85% 95%;
    --accent-foreground: 240 8% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 240 6% 90%;
    --input: 240 6% 90%;
    --ring: 260 60% 65%;

    --radius: 1rem;

    /* Custom Aura colors */
    --lavender: 260 60% 65%;
    --lavender-light: 260 80% 92%;
    --sky-blue: 200 85% 92%;
    --sky-blue-bright: 200 100% 85%;
    --pink-light: 340 85% 95%;
    --pink-glow: 340 100% 90%;
    --silver: 240 5% 96%;
    --silver-light: 0 0% 98%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--lavender-light)), hsl(var(--sky-blue)));
    --gradient-glow: linear-gradient(135deg, hsl(var(--pink-light)), hsl(var(--lavender-light)), hsl(var(--sky-blue)));
    --gradient-bg: linear-gradient(180deg, hsl(0 0% 99%), hsl(240 5% 96%));

    /* Glassmorphism */
    --glass-bg: hsla(0, 0%, 100%, 0.7);
    --glass-border: hsla(240, 6%, 90%, 0.3);

    /* Neumorphic shadows */
    --shadow-neu-light: 8px 8px 16px rgba(163, 177, 198, 0.15), -8px -8px 16px rgba(255, 255, 255, 0.7);
    --shadow-neu-hover: 12px 12px 24px rgba(163, 177, 198, 0.2), -12px -12px 24px rgba(255, 255, 255, 0.8);
    --shadow-glow: 0 8px 32px hsla(260, 60%, 65%, 0.2);
    --shadow-pink-glow: 0 8px 32px hsla(340, 100%, 90%, 0.3);

    /* Transitions */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-['Poppins',sans-serif];
    background: linear-gradient(180deg, hsl(0 0% 99%), hsl(240 5% 96%));
    min-height: 100vh;
  }
}

@layer utilities {
  /* Glassmorphism utilities */
  .glass {
    background: var(--glass-bg);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid var(--glass-border);
  }

  .glass-card {
    @apply glass rounded-3xl;
    box-shadow: var(--shadow-neu-light);
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    box-shadow: var(--shadow-neu-hover);
    transform: translateY(-4px);
  }

  /* Glow effects */
  .glow-lavender {
    box-shadow: var(--shadow-glow);
  }

  .glow-pink {
    box-shadow: var(--shadow-pink-glow);
  }

  /* Gradient backgrounds */
  .gradient-primary {
    background: var(--gradient-primary);
  }

  .gradient-glow {
    background: var(--gradient-glow);
  }

  /* Animations */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-shimmer {
    animation: shimmer 3s ease-in-out infinite;
  }

  .animate-glow {
    animation: glow 4s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  @keyframes shimmer {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }

  @keyframes glow {
    0%, 100% {
      filter: brightness(1);
    }
    50% {
      filter: brightness(1.2);
    }
  }

  /* Hover lift effect */
  .hover-lift {
    transition: var(--transition-smooth);
  }

  .hover-lift:hover {
    transform: translateY(-8px) scale(1.02);
  }
}
